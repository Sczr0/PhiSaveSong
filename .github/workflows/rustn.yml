name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Build project
        run: cargo build --release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Build Artifacts
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            target/release/$(if [ $RUNNER_OS == 'Windows' ]; then echo 'PhiSaveSong.exe'; else echo 'PhiSaveSong'; fi)
          asset_name: $(if [ $RUNNER_OS == 'Windows' ]; then echo 'PhiSaveSong.exe'; else echo 'PhiSaveSong'; fi)
          asset_content_type: application/octet-stream
